name: Build and Deploy to GitHub Pages

# ワークフロー実行のトリガー設定
on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - "docs/**"
  pull_request:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - "docs/**"
  # 手動実行のためのオプション
  workflow_dispatch:

# セキュリティ強化：最小権限の原則
permissions:
  contents: read
  pages: write
  id-token: write

# 並行実行制御：同時デプロイの防止
concurrency:
  group: "pages"
  cancel-in-progress: false

# デフォルト実行環境の設定
env:
  NODE_VERSION: "22" # 最新のLTS Node.jsバージョン（2025年5月現在）
  PNPM_VERSION: "10" # 最新のpnpmメジャーバージョン（2025年5月現在）

jobs:
  # 品質チェック（PR用）
  quality-checks:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"
          cache-dependency-path: "pnpm-lock.yaml"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run type checking
        run: pnpm type-check

      - name: Run linting
        run: pnpm lint

      - name: Run formatting check
        run: pnpm format:check

      - name: Run tests
        run: pnpm test

  # ビルドとデプロイ（メインブランチ用）
  build-and-deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      # リポジトリのコードをチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 完全な履歴を取得

      # pnpmのインストール
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false # Node.jsのセットアップ（改良されたキャッシュ戦略）
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"
          cache-dependency-path: "pnpm-lock.yaml"

      # pnpmストアのキャッシュ（安全な設定）
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
        continue-on-error: true

      # ビルドキャッシュ（ディレクトリ作成後）
      - name: Create cache directories
        run: |
          mkdir -p node_modules/.cache
          mkdir -p .vite

      - name: Setup build cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules/.cache
            .vite
          key: ${{ runner.os }}-build-cache-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('src/**/*') }}
          restore-keys: |
            ${{ runner.os }}-build-cache-${{ hashFiles('**/pnpm-lock.yaml') }}-
            ${{ runner.os }}-build-cache-
        continue-on-error: true

      - name: Configure pnpm store
        run: pnpm config set store-dir ~/.pnpm-store

      # 依存関係のインストール（セキュリティ強化）
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # 品質チェック（ビルド前）
      - name: Run type checking
        run: pnpm type-check

      - name: Run linting
        run: pnpm lint

      - name: Run tests
        run: pnpm test # リポジトリ名から動的にベースパスを設定
      - name: Set base path from repository name
        run: |
          echo "VITE_BASE_PATH=/${{ github.event.repository.name }}/" >> $GITHUB_ENV
          echo "Base path set to: /${{ github.event.repository.name }}/"      # 環境変数の準備（GitHub Secretsから）      # アプリケーションのビルド（改良された設定）
      - name: Build application
        run: pnpm build
        env:
          CI: true
          # GitHub Secretsから環境変数を設定
          VITE_GOOGLE_MAPS_API_KEY: ${{ secrets.VITE_GOOGLE_MAPS_API_KEY }}
          VITE_GOOGLE_MAPS_MAP_ID: ${{ secrets.VITE_GOOGLE_MAPS_MAP_ID }}
          VITE_GOOGLE_SHEETS_API_KEY: ${{ secrets.VITE_GOOGLE_SHEETS_API_KEY }}
          VITE_GOOGLE_SPREADSHEET_ID: ${{ secrets.VITE_GOOGLE_SPREADSHEET_ID }}
          VITE_EMAILJS_SERVICE_ID: ${{ secrets.VITE_EMAILJS_SERVICE_ID }}
          VITE_EMAILJS_TEMPLATE_ID: ${{ secrets.VITE_EMAILJS_TEMPLATE_ID }}
          VITE_EMAILJS_PUBLIC_KEY: ${{ secrets.VITE_EMAILJS_PUBLIC_KEY }}
          NODE_ENV: production
          NODE_OPTIONS: "--max_old_space_size=4096"

      # ビルド成果物の検証
      - name: Verify build output
        run: |
          if [ ! -d "./dist" ]; then
            echo "Error: Build output directory not found"
            exit 1
          fi
          echo "Build output size:"
          du -sh ./dist
          echo "Build output contents:"
          ls -la ./dist

      # GitHub Pagesの設定
      - name: Setup Pages
        uses: actions/configure-pages@v4 # アーティファクトのアップロード
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./dist"

      # GitHub Pagesへのデプロイ（新しい推奨方法）
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      # デプロイ成功の確認
      - name: Verify deployment
        run: |
          echo "Deployment URL: ${{ steps.deployment.outputs.page_url }}"
          echo "Deployment successful at $(date)"
